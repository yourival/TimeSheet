@model LeaveApplicationViewModel

@{
    ViewBag.Title = "Application Detail";
    string[] LeaveNames = { "Sick Leave", "Flexi Leave", "Annual Leave" };
}

<head>
    @Styles.Render("~/Content/css")
</head>

<br />
<div class="container" align="center">
    <div class="row">
        <div class="col-sm-3"></div>
        <div class="col-sm-6 col-xs-12 approval-detail">
            <h3>General Information</h3>
            <hr />
            <table class="table-responsive">
                <tr>
                    <th>@Html.DisplayNameFor(m => m.LeaveApplication.leaveType)</th>
                    <td>@Model.LeaveApplication.leaveType.GetDisplayName()</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.LeaveApplication.StartTime)</th>
                    <td>@Html.DisplayFor(m => m.LeaveApplication.StartTime)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.LeaveApplication.EndTime)</th>
                    <td>@Html.DisplayFor(m => m.LeaveApplication.EndTime)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.LeaveApplication.TotalLeaveTime)</th>
                    <td>@Html.DisplayFor(m => m.LeaveApplication.TotalLeaveTime)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.LeaveApplication.status)</td>
                    <td class=@getStatusClass(Model.LeaveApplication.status)>@Model.LeaveApplication.status.GetDisplayName()</td>
                </tr>
                <tr>
                    <th>Reason</th>
                    <td>@Html.DisplayFor(m => m.LeaveApplication.Comment)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.LeaveApplication.Attachments)</th>
                    <td>
                        @if (Model.LeaveApplication.Attachments.Count != 0)
                        {
                            foreach (var file in Model.LeaveApplication.Attachments)
                            {
                                <a href="@Url.Action("DownloadAttachment", "LeaveApproval", new { id = file.Id })">
                                    <span class="glyphicon glyphicon glyphicon-file"></span>@file.FileName
                                </a>@:&nbsp;
                            }
                        }
                        else
                        {
                            @:No file attached.
                        }

                    </td>
                </tr>
                <tr>
                    <th style="vertical-align: top">Send To</th>
                    <td>
                        @foreach (var manager in ViewBag.Managers)
                        {
                            <p>@manager</p>
                        }
                    </td>
                </tr>
                @if (@Model.LeaveApplication.ApprovedTime != null)
                {
                    <tr>
                        <th>Signed&nbsp;At</th>
                        <td>@Html.DisplayFor(m => m.LeaveApplication.ApprovedTime)</td>
                    </tr>
                    <tr>
                        <th>Signed&nbsp;By</th>
                        <td>@ViewBag.SignedManager</td>
                    </tr>
                    @*<tr>
                        <th>Original Balance (hrs)</th>
                        <td>
                            @for (int i = 0; i < LeaveNames.Length; i++)
                            {
                                @LeaveNames[i]
                                @:   :&nbsp;

                                <span>@ViewBag.OriginalBalances[i]</span>

                                if (i != LeaveNames.Length - 1)
                                {
                                    @: ,&nbsp;&nbsp;
                            }
                            }
                        </td>
                    </tr>
                    <tr>
                        <th>Close Balance (hrs)</th>
                        <td>
                            @for (int i = 0; i < LeaveNames.Length; i++)
                            {
                                @LeaveNames[i]
                                @:   :&nbsp;

                                <span>@ViewBag.CloseBalances[i]</span>

                                if (i != LeaveNames.Length - 1)
                                {
                                    @: ,&nbsp;&nbsp;
                            }
                            }
                        </td>
                    </tr>*@
                }
            </table>

            <hr>
            <div class="row" align="right">
                <div class="col-sm-offset-1 col-sm-10">
                    <a href="#approve-detail" data-toggle="collapse">
                        <p>
                            Click here if you want to see details
                            <span class="glyphicon glyphicon-pencil"></span>
                        </p>
                    </a>
                </div>
            </div>
            <div align="center" class="approve-detail">
                <div id="approve-detail" class="collapse row">
                    <table class="table table-responsive">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <tr>
                            <th>Date</th>
                            <th>Type</th>
                            <th>Detail Hours</th>
                        </tr>
                        @foreach (var item in Model.TimeRecords)
                        {
                            <tr>
                                <td>
                                    @String.Format("{0:ddd, dd/MM/yyyy}", item.RecordDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(m => item.LeaveType, new { htmlAttributes = new { @class = "leavetype" } })
                                </td>
                                <td>
                                    @Html.DisplayFor(m => item.LeaveTime, new { htmlAttributes = new { @class = "leavetime" } })
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@functions {
    string getStatusClass(_status status)
    {
        string className;
        switch (status)
        {
            case _status.submited:
                className = "text-primary";
                break;
            case _status.approved:
                className = "text-success";
                break;
            case _status.rejected:
                className = "text-danger";
                break;
            case _status.modified:
                className = "text-warning";
                break;
            default:
                className = "";
                break;
        }
        return className;
    }
}

