@model LeaveApplicationViewModel

@{
    string[] LeaveNames = { "Sick Leave", "Flexi Leave", "Annual Leave" };
    string TypeExplain = "<strong>Sick Leave</strong> will take your sick leaves.<br/>" +
                         "<strong>Annual Leave</strong> will take your holiday leaves.<br/>" +
                         "<strong>Flexi Leave</strong> will take your flexi leaves.<br/>" +
                         "<strong>Compassionate Pay</strong> will take your sick leaves.<br/>" +
                         "<strong>Flexi Hour</strong> is the flexi leaves you earn.<br/>" +
                         "<strong>Additional Hour</strong> will not take any leave but pay you in the next pay period.<br/>";
}

<div class="hrForm-content">
    <div>
        @using (Html.BeginForm("Leave", "HRApplication", FormMethod.Post, new { enctype = "multipart/form-data", id = "lform" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.LeaveApplication.UserID)
            <div>
                <label>Your current balance (hrs):&nbsp;</label>
                <text class="textStyleBefore">
                    @for (int i = 0; i < LeaveNames.Length; i++)
                    {
                        @LeaveNames[i]
                        @:&nbsp;
                        <span class="lefthours">@Html.DisplayFor(m => m.LeaveBalances[i].AvailableLeaveHours)</span>

                        if (i != LeaveNames.Length - 1)
                        {
                            @:,&nbsp;&nbsp;
                        }
                    }
                </text>
            </div>
            <hr>
            <div class="form-group row">
                <label class="col-sm-offset-1 col-sm-2" for="startTime">
                    @Html.LabelFor(model => model.LeaveApplication.StartTime)
                </label>
                <div class="col-sm-8">
                    <p>
                        @Html.EditorFor(model => model.LeaveApplication.StartTime, new { htmlAttributes = new { @class = "form-control", @id = "start" } })
                        @Html.ValidationMessageFor(model => model.LeaveApplication.StartTime, "", new { @class = "text-danger" })
                    </p>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-offset-1 col-sm-2" for="endTime">
                    @Html.LabelFor(model => model.LeaveApplication.EndTime)
                </label>
                <div class="col-sm-8">
                    <p>
                        @Html.EditorFor(model => model.LeaveApplication.EndTime, new { htmlAttributes = new { @class = "form-control", @id = "end" } })
                    </p>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-offset-1 col-sm-2" for="type">
                    @Html.LabelFor(model => model.LeaveApplication.leaveType)
                    <a id="type-popover" href="#" role="button" data-toggle="popover" data-placement="right"
                       data-trigger="focus" title="About Leave Types" data-content="@TypeExplain">
                        <span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>
                    </a>                  
                </label>
                <div class="col-sm-8">
                    <p>
                        @Html.EnumDropDownListFor(model => model.LeaveApplication.leaveType, new { @class = "form-control", @id = "leavetypeMain" })
                    </p>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-offset-1 col-sm-2" for="manager">
                    @Html.Label("Manager")
                </label>
                <div class="col-sm-8">
                    <p>
                        @Html.DropDownListFor(model => model.LeaveApplication.ManagerID, (IEnumerable<SelectListItem>)ViewBag.Manager, htmlAttributes: new { @class = "form-control" })
                    </p>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-offset-1 col-sm-2" for="comment">
                    Reason
                </label>
                <div class="col-sm-8">
                    <p>
                        @Html.EditorFor(model => model.LeaveApplication.Comment, new { htmlAttributes = new { @class = "form-control", @id = "comment", @style = "resize: vertical" } })
                    </p>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-offset-1 col-sm-2" for="files">
                    Attachments
                </label>
                <div class="col-sm-8 ">
                    <p class="right-align-cell">
                        <text id="upload-file-info"></text>
                        <label class="btn btn-default">
                            Browse...
                            @Html.TextBoxFor(model => model.Attachments, new { id = "files", type = "file", style = "display: none", multiple = "multiple" })
                        </label>
                    </p>
                </div>
            </div>
            <div class="row" align="right">
                <div class="col-sm-offset-1 col-sm-10">
                    <a href="#leaveDetail" data-toggle="collapse">
                        <p>
                            Click here if you want to edit details
                            <span class="glyphicon glyphicon-pencil"></span>
                        </p>
                    </a>
                </div>
            </div>

            <div class="appDetails">
                <div class="col-sm-offset-1 col-sm-2"></div>
                <div id="leave-form" class="col-sm-8"></div>
            </div>
            <hr />
            <div id="alert"></div>
            <div class="row" align="right">
                <div class="col-sm-offset-1 col-sm-10">
                    <label>Balance after application (hrs):&nbsp;</label>
                    <text class="textStyleAfter">
                        @for (int i = 0; i < LeaveNames.Length; i++)
                        {
                            @LeaveNames[i]
                            @:   :&nbsp;

                            <span class="lefthours">@Html.DisplayFor(m => m.LeaveBalances[i].AvailableLeaveHours)</span>

                            if (i != LeaveNames.Length - 1)
                            {
                                @: ,&nbsp;&nbsp;
                            }
                        }
                    </text>
                </div>
            </div>
            <div class="row" align="right">
                <div class="col-sm-offset-1 col-sm-10">
                    <label>Total:</label>
                    <span class="total" id="leave-total"></span>
                </div>
            </div>
            <div class="button-group">
                <input type="submit" value="Submit" id="submit-btn" class="btn btn-primary" />
            </div>
        }
    </div>

</div>

@*<script src="~/Scripts/jquery-3.1.1.js"></script>*@

