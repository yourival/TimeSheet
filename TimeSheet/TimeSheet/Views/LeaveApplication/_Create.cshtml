@model TimeSheet.Models.LeaveApplicationViewModel

@{
    ViewBag.Title = "Leave Application";
}
<head>
    @Styles.Render("~/Content/css")
</head>

<br />
<table class="table-striped">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <tr>
        <th>Date</th>
        <th>Leave Type</th>
        <th>Apply Leave Time</th>
    </tr>
    @for (int i=0; i<Model.TimeRecords.Count; i++)
    {
        <tr>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(m => m.TimeRecords[i].id)
            @Html.HiddenFor(m => m.TimeRecords[i].UserID)
            @Html.HiddenFor(m => m.TimeRecords[i].RecordDate)
            @Html.HiddenFor(m => m.TimeRecords[i].StartTime)
            @Html.HiddenFor(m => m.TimeRecords[i].EndTime)
            @Html.HiddenFor(m => m.TimeRecords[i].LunchBreak)
            @Html.HiddenFor(m => m.TimeRecords[i].IsHoliday)
            @Html.HiddenFor(m => m.TimeRecords[i].Flexi)

            <th class="form-group">
                @String.Format("{0:ddd, dd/MM/yyyy}", Model.TimeRecords[i].RecordDate)
            </th>

            <th class="form-group">

                @Html.EnumDropDownListFor(m => m.TimeRecords[i].LeaveType, htmlAttributes: new { @class = "leavetype" })
                @Html.ValidationMessageFor(m => m.TimeRecords[i].LeaveType, "", new { @class = "text-danger" })
            </th>
                       
            <th class="form-group">
                @Html.EditorFor(m => m.TimeRecords[i].LeaveTime, new { htmlAttributes = new { @class = "leavetime" } })
                @Html.ValidationMessageFor(m => m.TimeRecords[i].LeaveTime, "", new { @class = "text-danger" })
            </th>
        </tr>
    }
</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


