@model TimeSheet.Models.LeaveApplicationViewModel

@{
    string[] LeaveNames = {"Sick Leave", "Flexi Leave", "Annual Leave" };
}

<head>
    @Styles.Render("~/Content/css")
</head>


<div class="hrForm-content">
    <div>
        @using (Html.BeginForm("Index", "LeaveApplication", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.LeaveApplication.UserID)
            <div>
                <label>Balance (hrs):&nbsp;</label>
                <text style="color:black">
                    @for (int i = 0; i < 3; i++)
                {
                        @LeaveNames[i]
                        @:   :&nbsp;

                        <span class="lefthours">@Html.DisplayFor(m => m.LeaveRecords[i].AvailableLeaveHours)</span>

                        if (i != 2)
                        {
                            @: ,&nbsp;&nbsp;
                        }
                }
                </text>

            </div>
            <hr>
            <form>
                <div class="form-group">
                    <label class="col-sm-offset-1 col-sm-2" for="startTime">
                        @Html.LabelFor(model => model.LeaveApplication.StartTime)
                    </label>
                    <div class="col-sm-8">
                        <p>
                            @Html.EditorFor(model => model.LeaveApplication.StartTime, new { htmlAttributes = new { @class = "form-control", @id = "start" } })
                            @Html.ValidationMessageFor(model => model.LeaveApplication.StartTime, "", new { @class = "text-danger" })
                        </p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-offset-1 col-sm-2" for="endTime">
                        @Html.LabelFor(model => model.LeaveApplication.EndTime)
                    </label>
                    <div class="col-sm-8">
                        <p>
                            @Html.EditorFor(model => model.LeaveApplication.EndTime, new { htmlAttributes = new { @class = "form-control", @id = "end" } })
                        </p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-offset-1 col-sm-2" for="type">
                        @Html.LabelFor(model => model.LeaveApplication.leaveType)
                    </label>
                    <div class="col-sm-8">
                        <p>
                            @Html.DropDownListFor(model => model.LeaveApplication.leaveType, (IEnumerable<SelectListItem>)ViewBag.LeaveType, htmlAttributes: new { @class = "form-control", @id = "leavetypeMain" })
                        </p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-offset-1 col-sm-2" for="manager">
                        @Html.Label("Manager")
                    </label>
                    <div class="col-sm-8">
                        <p>
                            @Html.DropDownList("manager", (IEnumerable<SelectListItem>)ViewBag.Manager, htmlAttributes: new { @class = "form-control" })
                        </p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-offset-1 col-sm-2" for="comment">
                        @Html.LabelFor(model => model.LeaveApplication.Comment)
                    </label>
                    <div class="col-sm-8">
                        <p>
                            @Html.EditorFor(model => model.LeaveApplication.Comment, new { htmlAttributes = new { @class = "form-control", @id = "comment", @style = "resize: vertical" } })
                        </p>
                    </div>
                </div>
                <div class="row" align="right">
                    <div class="col-sm-offset-1 col-sm-10">
                        <a href="#leaveDetail" data-toggle="collapse">
                            <p>
                                Click here if you want to edit details
                                <span class="glyphicon glyphicon-pencil"></span>

                            </p>
                        </a>
                    </div>
                </div>

                <div class="appDetails">
                    <div class="col-sm-offset-1 col-sm-2"></div>
                    <div id="leave-form" class="col-sm-8"></div>                    
                </div>
                <div class="button-group">
                        
                    <input type="submit" value="Submit" id="submit-btn" class="btn btn-primary" />
                    
                        
                    @*<button type="button" class="btn btn-primary" data-toggle="collapse" data-target="#leaveDetail">
                        Click for Detail
                    </button>*@
                </div>
                
            </form>
        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
    function renderLeaveForm() {
        var start = $('#start').val();
        var end = $('#end').val();
        var leavetypeMain = $('#leavetypeMain').val();


        //Clear previous validation message
        $("#leave-form").removeData("validator");
        $("#leave-form").removeData("unobtrusiveValidation");

        $.ajax({
            url: "/LeaveApplication/CreateLeaveForm",
            type: "GET",
            data: { start: start, end: end, leaveType: leavetypeMain }
        })
        .done(function (partialViewResult) {
            $("#leave-form").html(partialViewResult);

            // Enable submit button
            $("#submit-btn").prop("disabled", false);

            //Enable jquery validation
            $.validator.unobtrusive.parse("#leave-form");
            alert()
        });
    }

    function getFormattedDate(date) {
        var year = date.getFullYear();
        var month = (1 + date.getMonth()).toString();
        month = month.length > 1 ? month : '0' + month;
        var day = date.getDate().toString();
        day = day.length > 1 ? day : '0' + day;
        return year + '-' + month + '-' + day;
    }

    $(document).ready(function () {
        var fullDate = new Date();
        var lefthours = [];
        $(".lefthours").each(function (i) {
            lefthours.push($(this).text());
        });

        $("#start").val(getFormattedDate(new Date()));
        $("#end").val(getFormattedDate(new Date()));
        renderLeaveForm();
        // When there is any change on main panel
        $("#start").on("change", function () {
            if ($("#start").val() > $("#end").val())
                $("#end").val($("#start").val());
            renderLeaveForm();
        });
        $("#end").on("change", function () {
            if ($("#start").val() > $("#end").val())
                $("#start").val($("#end").val());
            renderLeaveForm();
        });
        $("#leavetypeMain").on("change", function () {
            renderLeaveForm();
        });

        // When the form is submitted
        $("form").submit(function (e) {
            // Test if applied leave times excess available leave balance
            var leavetypes = $(".leavetype");
            var leavetimes = $(".leavetime");
            var length = leavetimes.length;
            var msg = "";

            for (var i = 0; i < length; i++) {
                lefthours[$(leavetypes[i]).val() - 1] -= $(leavetimes[i]).val();
            }

            for (var i = 0; i < 3; i++) {
                if (lefthours[i] < 0) {
                    switch (i) {
                        case 0:
                            msg += "<strong>Sick</strong> ";
                            break;
                        case 1:
                            msg += "<strong>Flexi</strong> ";
                            break;
                        case 2:
                            msg += "<strong>Annual</strong> ";
                            break;
                        default:
                            msg = "Something went wrong";
                    }
                }
            }

            if (msg != "") {
                alert(msg);
                $("#alert").attr('class', "alert alert-danger");
                $("#alert").html('<span class="glyphicon glyphicon-exclamation-sign" style="color:#a94442""></span>' +
                                 "Your leaves application excesses in leave types: " + msg +
                                 "<br/>Please change them up and try submitting again");
                e.preventDefault(e);
                return false;
            } else {
                $("#alert").attr('class', "alert alert-success");
                $("#alert").text("Successfully submitted" + msg);
            }
        });
    });
</script>
