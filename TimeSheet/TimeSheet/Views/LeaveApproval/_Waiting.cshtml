@model List<LeaveApplication>

@{
    Layout = null;
}

<table class="table table-hover">
    <thead>
        <tr>
            <th>#</th>
            <th>Applicant</th>
            <th>Manager</th>
            <th>Leave Type</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Total Hours</th>
            <th>Status</th>
            <th>Approval</th>
        </tr>
    </thead>
    <tbody style="cursor:pointer">
        @for (int i = 0; i < 5 && i < Model.Count; i++)
        {
            <tr class="table-row" onclick="location.href='@Url.Action("ApprovalDetail", "LeaveApproval", new { id = Model[i].id })'">
                <td>@Html.DisplayFor(m => m[i].id)</td>
                <td>@Html.DisplayFor(m => m[i].UserName)</td>
                <td>@Model[i].GetManagerList()</td>
                <td>@Model[i].leaveType.GetDisplayName()</td>
                <td>@Html.DisplayFor(m => m[i].StartTime)</td>
                <td>@Html.DisplayFor(m => m[i].EndTime)</td>
                <td>@Html.DisplayFor(m => m[i].TotalLeaveTime)</td>
                <td id="status-@Model[i].id" class=@getStatusClass(Model[i].status)>@Model[i].status.GetDisplayName()</td>
                <td class="action">
                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                    {
                        <button class="btn btn-success" value="@Model[i].id">Approve</button>
                        <button class="btn btn-danger" value="@Model[i].id">Reject</button>
                    }
                </td>
            </tr>
        }
        <tr>
            <td colspan="7">
            <td>
                @if (Model.Count > 5)
                {
                    @Html.ActionLink("More...", "ApplicationList", new { type = "Waiting" })
                }
            </td>
        </tr>
    </tbody>
</table>

@functions {
    string getStatusClass(_status status)
    {
        string className;
        switch (status)
        {
            case _status.submited:
                className = "text-primary";
                break;
            case _status.modified:
                className = "text-warning";
                break;
            default:
                className = "";
                break;
        }
        return className;
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("button").on("click", function (e) {
            e.stopPropagation();
            var id = $(this).val();
            var decision = $(this).text();
            $(this).closest("tr").fadeOut(500, function () {
                $.ajax({
                    url: "/LeaveApproval/ApprovalWaiting/",
                    type: "POST",
                    data: { id: id, decision: decision }
                })
                    .done(function (result) {
                        $("#waiting-apps").html(result);
                        $.ajax({
                            url: "/LeaveApproval/ApprovalPartial/",
                            type: "GET",
                            data: { type: "Confirmed" }
                        })
                            .done(function (result) {
                                $("#confirmed-apps").html(result);
                            })
                            .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                                $("#error").html(xmlHttpRequest.responseText);
                            });
                    })
                    .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                        $("#error").html(xmlHttpRequest.responseText);
                    });

            });
        });
    });
</script>